#!/bin/bash

###############################################################################
# Usage
###############################################################################
usage()
{
    echo
	echo "Copy an existing data dump locally"
	echo
	echo "Usage: $self <baseHostName>"
	echo
	echo "   <baseHostName> should be saturn to put a dump from dev-saturndb"
	echo "          $logFile and email the log to IT when complete."
    echo "          can also include the name of the db host:dbname"
	echo
	exit 1;
}


# /////////////////// Main

if [ $# -lt 1 ]; then
	echo "At least a database host needs to be specified (i.e. neptune -> dev-neptunedb)"
	usage
fi

# Handle host:dbname pattern (default dbname to prophet if none specified)
dbhost=${1%:*}
dbname=${1#*:}
if [ "$dbname" -eq "$dbhost" ]; then
    dbname=prophet
fi
echo "<$dbhost>:<$dbname>"
if [[ $dbhost = dev*db ]] || [[ $dbhost = tgt*db ]] || [[ $dbhost = stable*db ]]; then
  echo "Using straight up host name"
  # dbHost=$1
else
  dbhost=dev-${dbhost}db
fi

#destinationDir=$dbHost
destinationFile=${2:-${dbhost}_${dbname}_`date +%F`.dump}

if [ -r $destinationFile ]; then
	echo "WARN: $destinationFile already exists. It will be overwritten!"
#	rm -fv $destinationDir/*
#else
#	echo "Creating dir: $destinationDir"
#	mkdir -p $destinationDir;
fi

#pushd $destinationDir > /dev/null
#debug echo PWD=`pwd`

echo "Beginning dump of '$dbname' from '$dbhost'"
echo "pg_dump -v -F c -U prophet -h $dbhost $dbname > $destinationFile"
pg_dump -v -F c -U prophet -h $dbhost $dbname > $destinationFile

echo "COMPLETED: Dump of ${dbhost}:${dbname} to ${destinationFile}"
