#!/bin/bash
# vim: set filetype=sh:

BE_HOME=${BE_HOME:-$HOME/.be-env}
PROJECTS_HOME=${PROJECTS_HOME:-$HOME/projects}

###############  Utilities
# Echo the description of a desk. $1 is the deskfile.
echo_description() {
    local descline=$(grep -E "#\s+Description" "$1")
    echo "${descline##*Description: }" # This returns the last description in the file
}

# Return a list of aliases and functions for a given desk
get_callables() {
    local DESKPATH=$1
    grep -E "^(alias |(function )?[a-zA-Z0-9_-]+( )?\()" "$DESKPATH" \
        | sed 's/alias \([^= ]*\)=.*/\1/' \
        | sed -E 's/(function )?([a-zA-Z0-9]*)\(\).*/\2/'
}
############### End Utilities

be_version() {
    echo "â—²  be 2.0"
}

be_usage() {
	echo "Usage: be <op> <projectName> [<branch>]"
    echo "       op :== <help|version|ls|list|go|edit|create>"
	echo
	be_list
}

be_list() {
    if [ ! -d "$BE_HOME" ]; then
        echo "No be home dir! Set BE_HOME to a valid directory or create ~/.be-env"
        exit 1
    fi

    find -L "$BE_HOME" -name '*.be' -print0 | while read -d '' -r f; do
        local name=$(basename "${f//.be/}") 
        local desc=$(echo_description "$f")

        if [ -z "$desc" ]; then
            echo "$name"
        else
            echo "$name" "-" "$desc"
        fi
    done
}

be_go() {
    local TO_BE_ENV="$1"
    local DESKPATH="$(find -L "$BE_HOME" -name "${TO_BE_ENV}.be")"
    local DESKBRANCH="${2:-develop}"

	# If an explicit .be file doesn't exist, but the project dir does, use generic.be
    if [ -z "$DESKPATH" ] && [ -d "${PROJECTS_HOME}/${TO_BE_ENV}" ]; then 
	echo "Setting to generic"
        DESKPATH="$(find -L "$BE_HOME" -name "generic.be")"
	fi

    # If we still don't have a path to the .be file, then error and exit,
	# otherwise, setup env variable and open a new shell.
    if [ -z "$DESKPATH" ]; then
        echo "Be env" "$TO_BE_ENV" "not found in" "$BE_HOME"
        exit 1
    else
        PRJ="${TO_BE_ENV}" PRJ_ENV="${DESKPATH}" PRBRANCH=$DESKBRANCH $SHELL
    fi
}

be_current() {
    local DESKPATH=$PRJ_ENV
    if [ -z "$DESKPATH" ]; then
        echo "No environment activated." 
        exit 2
    else
        basename "${DESKPATH//.be/}"
        # Need a better way to get a project's description
		# echo_description "$DESKPATH"
        local CALLABLES=$(get_callables "$DESKPATH")

        [ -z "$CALLABLES" ] || echo ""

        for NAME in $CALLABLES; do
            local DOCLINE=$(
                grep -B 1 -E \
                    "^(alias ${NAME}=|(function )?${NAME}( )?\()" "$DESKPATH" \
                    | grep "#")

            if [ -z "$DOCLINE" ]; then
                echo "  ${NAME}"
            else
                echo "  ${NAME} -" "${DOCLINE##\# }"
            fi
        done
    fi
}

# Create a project environment create <projectname> <branch>
be_create() {
    if [ $# -eq 0 ]; then
        echo "be create <project> [branch]"
        echo
        exit 3
    fi
    local project=${1}
    local branch=${2:-develop}

    if [ -d "" ]; then
        echo "Environment already exists: ${PROJECTS_HOME}/$project/$branch"
    else
        echo "Creating envionment: ${PROJECTS_HOME}/$project/$branch"
        mkdir -p "${PROJECTS_HOME}/$project/$branch"
    fi

    local DESKEXT=.be
    local BEFILE_PATH="$(find -L "$BE_HOME" -name "${project}${DESKEXT}")"
    echo BEFILE_PATH=$BEFILE_PATH
    if [ ! -e "$BEFILE_PATH" ]; then
        if [ -e "$BE_HOME/generic${DESKEXT}" ]; then
            echo "Creating environment file: ${BE_HOME}/${project}.be"
            cat "$BE_HOME/generic${DESKEXT}" | sed "s/generic/${project}/g" > "${BE_HOME}/${project}.be"
        else
            touch "${BE_HOME}/${project}.be"
        fi 
    fi

    be_edit $project
}

be_edit() {
    if [ $# -eq 0 ]; then
        if [ -z "$PRJ_ENV" ]; then
            echo "No environment activated."
            exit 3
        fi
        local DESKNAME_TO_EDIT="$PRJ"
    elif [ $# -eq 1 ]; then
        local DESKNAME_TO_EDIT="$1"
    else
        echo "Usage: ${PROGRAM} edit [prj-name]"
        exit 1
    fi

    local DESKEXT=.be    # $(get_deskfile_extension)
    local EDIT_PATH="$(find -L "$BE_HOME" -name "${DESKNAME_TO_EDIT}${DESKEXT}")"

    ${EDITOR:-vi} "$EDIT_PATH" 

    # TODO: If just edit current or DESKNAME_TO_EDIT == current
}


PROGRAM="${0##*/}"

case "$1" in
    # init) shift;               cmd_init "$@" ;;
    help|--help) shift;        be_usage "$@" ;;
    version|--version) shift;  be_version "$@" ;;
    ls|list) shift;            be_list "$@" ;;
    go|.) shift;               be_go "$@" ;;
    edit|e) shift;             be_edit "$@" ;;
    create|c) shift;           be_create "$@" ;;
    *)                         be_current "$@" ;;
esac
exit 0
